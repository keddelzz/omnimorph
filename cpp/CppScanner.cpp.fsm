
ScannerDriver::State CppScanner::startState() const
{
    return 0;
}

ScannerDriver::State CppScanner::errorState() const
{
    return -1;
}

bool CppScanner::isErrorState(ScannerDriver::State state) const
{
    return state < 0;
}

bool CppScanner::isAcceptingState(ScannerDriver::State state) const
{
    switch (state) {
        case 1: return true;
        case 2: return true;
        case 4: return true;
        case 5: return true;
        case 6: return true;
        case 8: return true;
        case 9: return true;
        case 10: return true;
        case 11: return true;
        case 12: return true;
        case 13: return true;
        case 14: return true;
        case 15: return true;
        case 16: return true;
        case 17: return true;
        case 18: return true;
        case 19: return true;
        case 20: return true;
        case 21: return true;
        case 22: return true;
        case 23: return true;
        case 24: return true;
        case 25: return true;
        case 26: return true;
        case 27: return true;
        case 28: return true;
        case 29: return true;
        case 30: return true;
        case 31: return true;
        case 32: return true;
        case 33: return true;
        case 34: return true;
        case 35: return true;
        case 36: return true;
        case 37: return true;
        case 38: return true;
        case 39: return true;
        case 40: return true;
        case 41: return true;
        case 42: return true;
        case 43: return true;
        case 44: return true;
        case 45: return true;
        case 46: return true;
        case 47: return true;
        case 48: return true;
        case 49: return true;
        case 50: return true;
        case 51: return true;
        case 52: return true;
        case 53: return true;
        case 55: return true;
        case 56: return true;
        case 57: return true;
        case 60: return true;
        case 61: return true;
        case 62: return true;
        case 63: return true;
        case 64: return true;
        case 66: return true;
        case 67: return true;
        case 68: return true;
        case 69: return true;
        case 70: return true;
        case 72: return true;
        case 73: return true;
        case 75: return true;
        case 76: return true;
        case 77: return true;
        case 78: return true;
        case 79: return true;
        case 80: return true;
        case 81: return true;
        case 82: return true;
        case 83: return true;
        case 84: return true;
        case 85: return true;
        case 86: return true;
        case 87: return true;
        case 88: return true;
        case 89: return true;
        case 90: return true;
        case 91: return true;
        case 92: return true;
        case 93: return true;
        case 94: return true;
        case 95: return true;
        case 96: return true;
        case 97: return true;
        case 98: return true;
        case 99: return true;
        case 100: return true;
        case 101: return true;
        case 102: return true;
        case 103: return true;
        case 104: return true;
        case 105: return true;
        case 106: return true;
        case 107: return true;
        case 108: return true;
        case 109: return true;
        case 110: return true;
        case 111: return true;
        case 112: return true;
        case 113: return true;
        case 114: return true;
        case 115: return true;
        case 116: return true;
        case 117: return true;
        case 118: return true;
        case 119: return true;
        case 120: return true;
        case 121: return true;
        case 122: return true;
        case 123: return true;
        case 124: return true;
        case 125: return true;
        case 126: return true;
        case 127: return true;
        case 128: return true;
        case 129: return true;
        case 130: return true;
        case 131: return true;
        case 134: return true;
        case 137: return true;
        case 138: return true;
        case 139: return true;
        case 140: return true;
        case 142: return true;
        case 143: return true;
        case 144: return true;
        case 145: return true;
        case 146: return true;
        case 147: return true;
        case 148: return true;
        case 149: return true;
        case 150: return true;
        case 151: return true;
        case 152: return true;
        case 153: return true;
        case 154: return true;
        case 155: return true;
        case 156: return true;
        case 157: return true;
        case 158: return true;
        case 159: return true;
        case 160: return true;
        case 161: return true;
        case 162: return true;
        case 163: return true;
        case 164: return true;
        case 165: return true;
        case 166: return true;
        case 167: return true;
        case 168: return true;
        case 169: return true;
        case 170: return true;
        case 171: return true;
        case 172: return true;
        case 173: return true;
        case 174: return true;
        case 175: return true;
        case 176: return true;
        case 177: return true;
        case 178: return true;
        case 179: return true;
        case 180: return true;
        case 181: return true;
        case 182: return true;
        case 183: return true;
        case 184: return true;
        case 185: return true;
        case 186: return true;
        case 187: return true;
        case 188: return true;
        case 189: return true;
        case 190: return true;
        case 191: return true;
        case 192: return true;
        case 193: return true;
        case 194: return true;
        case 195: return true;
        case 196: return true;
        case 197: return true;
        case 198: return true;
        case 199: return true;
        case 200: return true;
        case 201: return true;
        case 202: return true;
        case 203: return true;
        case 204: return true;
        case 205: return true;
        case 206: return true;
        case 211: return true;
        case 212: return true;
        case 213: return true;
        case 214: return true;
        case 215: return true;
        case 216: return true;
        case 217: return true;
        case 218: return true;
        case 219: return true;
        case 220: return true;
        case 221: return true;
        case 222: return true;
        case 223: return true;
        case 224: return true;
        case 225: return true;
        case 226: return true;
        case 227: return true;
        case 228: return true;
        case 229: return true;
        case 230: return true;
        case 231: return true;
        case 232: return true;
        case 233: return true;
        case 234: return true;
        case 235: return true;
        case 236: return true;
        case 237: return true;
        case 238: return true;
        case 239: return true;
        case 240: return true;
        case 241: return true;
        case 242: return true;
        case 243: return true;
        case 244: return true;
        case 245: return true;
        case 246: return true;
        case 247: return true;
        case 248: return true;
        case 249: return true;
        case 250: return true;
        case 251: return true;
        case 252: return true;
        case 253: return true;
        case 254: return true;
        case 255: return true;
        case 256: return true;
        case 257: return true;
        case 258: return true;
        case 259: return true;
        case 260: return true;
        case 261: return true;
        case 262: return true;
        case 263: return true;
        case 264: return true;
        case 265: return true;
        case 266: return true;
        case 267: return true;
        case 268: return true;
        case 269: return true;
        case 270: return true;
        case 271: return true;
        case 274: return true;
        case 275: return true;
        case 276: return true;
        case 277: return true;
        case 278: return true;
        case 279: return true;
        case 280: return true;
        case 281: return true;
        case 282: return true;
        case 283: return true;
        case 284: return true;
        case 285: return true;
        case 286: return true;
        case 287: return true;
        case 288: return true;
        case 289: return true;
        case 290: return true;
        case 291: return true;
        case 292: return true;
        case 293: return true;
        case 294: return true;
        case 295: return true;
        case 296: return true;
        case 297: return true;
        case 298: return true;
        case 299: return true;
        case 300: return true;
        case 301: return true;
        case 302: return true;
        case 303: return true;
        case 304: return true;
        case 305: return true;
        case 306: return true;
        case 307: return true;
        case 308: return true;
        case 309: return true;
        case 310: return true;
        case 311: return true;
        case 312: return true;
        case 313: return true;
        case 314: return true;
        case 315: return true;
        case 316: return true;
        case 317: return true;
        case 318: return true;
        case 319: return true;
        case 320: return true;
        case 321: return true;
        case 322: return true;
        case 323: return true;
        case 326: return true;
        case 327: return true;
        case 328: return true;
        case 329: return true;
        case 330: return true;
        case 331: return true;
        case 332: return true;
        case 333: return true;
        case 334: return true;
        case 335: return true;
        case 336: return true;
        case 337: return true;
        case 338: return true;
        case 339: return true;
        case 340: return true;
        case 341: return true;
        case 342: return true;
        case 343: return true;
        case 344: return true;
        case 345: return true;
        case 346: return true;
        case 347: return true;
        case 348: return true;
        case 349: return true;
        case 350: return true;
        case 351: return true;
        case 352: return true;
        case 353: return true;
        case 354: return true;
        case 355: return true;
        case 356: return true;
        case 357: return true;
        case 358: return true;
        case 359: return true;
        case 360: return true;
        case 361: return true;
        case 362: return true;
        case 363: return true;
        case 364: return true;
        case 365: return true;
        case 366: return true;
        case 367: return true;
        case 368: return true;
        case 369: return true;
        case 370: return true;
        case 371: return true;
        case 372: return true;
        case 373: return true;
        case 374: return true;
        case 375: return true;
        case 376: return true;
        case 377: return true;
        case 378: return true;
        case 379: return true;
        case 380: return true;
        case 381: return true;
        case 382: return true;
        case 383: return true;
        case 384: return true;
        case 385: return true;
        case 386: return true;
        case 387: return true;
        case 388: return true;
        case 389: return true;
        case 390: return true;
        case 391: return true;
        case 392: return true;
        case 393: return true;
        case 394: return true;
        case 395: return true;
        case 396: return true;
        case 397: return true;
        case 398: return true;
        case 399: return true;
        case 400: return true;
        case 401: return true;
        case 402: return true;
        case 403: return true;
        case 404: return true;
        case 405: return true;
        case 406: return true;
        case 407: return true;
        case 408: return true;
        case 409: return true;
        case 410: return true;
        case 411: return true;
        case 412: return true;
        case 413: return true;
        default: return false;
    }
}

TokenType CppScanner::tokenType(ScannerDriver::State state) const
{
    switch (state) {
        case 0: return TokenType::Error;
        case 1: return TokenType::White;
        case 2: return TokenType::Sym_Bang;
        case 3: return TokenType::Error;
        case 4: return TokenType::Sym_Hash;
        case 5: return TokenType::Sym_Percent;
        case 6: return TokenType::Sym_Amp;
        case 7: return TokenType::Error;
        case 8: return TokenType::Sym_OpenParen;
        case 9: return TokenType::Sym_CloseParen;
        case 10: return TokenType::Sym_Star;
        case 11: return TokenType::Sym_Plus;
        case 12: return TokenType::Sym_Comma;
        case 13: return TokenType::Sym_Minus;
        case 14: return TokenType::Sym_Dot;
        case 15: return TokenType::Sym_Slash;
        case 16: return TokenType::DecIntLit;
        case 17: return TokenType::DecIntLit;
        case 18: return TokenType::Sym_Colon;
        case 19: return TokenType::Sym_Semicolon;
        case 20: return TokenType::Sym_Lt;
        case 21: return TokenType::Sym_Equal;
        case 22: return TokenType::Sym_Gt;
        case 23: return TokenType::Sym_QMark;
        case 24: return TokenType::Ident;
        case 25: return TokenType::Sym_OpenBracket;
        case 26: return TokenType::Sym_CloseBracket;
        case 27: return TokenType::Sym_Circumflex;
        case 28: return TokenType::Ident;
        case 29: return TokenType::Ident;
        case 30: return TokenType::Ident;
        case 31: return TokenType::Ident;
        case 32: return TokenType::Ident;
        case 33: return TokenType::Ident;
        case 34: return TokenType::Ident;
        case 35: return TokenType::Ident;
        case 36: return TokenType::Ident;
        case 37: return TokenType::Ident;
        case 38: return TokenType::Ident;
        case 39: return TokenType::Ident;
        case 40: return TokenType::Ident;
        case 41: return TokenType::Ident;
        case 42: return TokenType::Ident;
        case 43: return TokenType::Ident;
        case 44: return TokenType::Ident;
        case 45: return TokenType::Ident;
        case 46: return TokenType::Ident;
        case 47: return TokenType::Ident;
        case 48: return TokenType::Sym_OpenCurly;
        case 49: return TokenType::Sym_Bar;
        case 50: return TokenType::Sym_CloseCurly;
        case 51: return TokenType::Sym_Tilde;
        case 52: return TokenType::Sym_BangEqual;
        case 53: return TokenType::StringLit;
        case 54: return TokenType::Error;
        case 55: return TokenType::Sym_PercentEqual;
        case 56: return TokenType::Sym_AmpAmp;
        case 57: return TokenType::Sym_AmpEqual;
        case 58: return TokenType::Error;
        case 59: return TokenType::Error;
        case 60: return TokenType::Sym_StarEqual;
        case 61: return TokenType::Sym_PlusPlus;
        case 62: return TokenType::Sym_PlusEqual;
        case 63: return TokenType::Sym_MinusMinus;
        case 64: return TokenType::Sym_MinusEqual;
        case 65: return TokenType::Error;
        case 66: return TokenType::FloatLit;
        case 67: return TokenType::Sym_SlashEqual;
        case 68: return TokenType::FloatLit;
        case 69: return TokenType::OctIntLit;
        case 70: return TokenType::FloatLit;
        case 71: return TokenType::Error;
        case 72: return TokenType::DecIntLit;
        case 73: return TokenType::DecIntLit;
        case 74: return TokenType::Error;
        case 75: return TokenType::Sym_ColonColon;
        case 76: return TokenType::Sym_LtLt;
        case 77: return TokenType::Sym_Le;
        case 78: return TokenType::Sym_EqualEqual;
        case 79: return TokenType::Sym_Ge;
        case 80: return TokenType::Sym_GtGt;
        case 81: return TokenType::Sym_CircumflexEqual;
        case 82: return TokenType::Ident;
        case 83: return TokenType::Ident;
        case 84: return TokenType::Ident;
        case 85: return TokenType::Ident;
        case 86: return TokenType::Ident;
        case 87: return TokenType::Ident;
        case 88: return TokenType::Ident;
        case 89: return TokenType::Ident;
        case 90: return TokenType::Ident;
        case 91: return TokenType::Ident;
        case 92: return TokenType::Ident;
        case 93: return TokenType::Kw_do;
        case 94: return TokenType::Ident;
        case 95: return TokenType::Ident;
        case 96: return TokenType::Ident;
        case 97: return TokenType::Ident;
        case 98: return TokenType::Ident;
        case 99: return TokenType::Ident;
        case 100: return TokenType::Ident;
        case 101: return TokenType::Ident;
        case 102: return TokenType::Ident;
        case 103: return TokenType::Kw_if;
        case 104: return TokenType::Ident;
        case 105: return TokenType::Ident;
        case 106: return TokenType::Ident;
        case 107: return TokenType::Ident;
        case 108: return TokenType::Ident;
        case 109: return TokenType::Ident;
        case 110: return TokenType::Kw_or;
        case 111: return TokenType::Ident;
        case 112: return TokenType::Ident;
        case 113: return TokenType::Ident;
        case 114: return TokenType::Ident;
        case 115: return TokenType::Ident;
        case 116: return TokenType::Ident;
        case 117: return TokenType::Ident;
        case 118: return TokenType::Ident;
        case 119: return TokenType::Ident;
        case 120: return TokenType::Ident;
        case 121: return TokenType::Ident;
        case 122: return TokenType::Ident;
        case 123: return TokenType::Ident;
        case 124: return TokenType::Ident;
        case 125: return TokenType::Ident;
        case 126: return TokenType::Ident;
        case 127: return TokenType::Ident;
        case 128: return TokenType::Ident;
        case 129: return TokenType::Ident;
        case 130: return TokenType::Sym_BarEqual;
        case 131: return TokenType::Sym_BarBar;
        case 132: return TokenType::Error;
        case 133: return TokenType::Error;
        case 134: return TokenType::CharLit;
        case 135: return TokenType::Error;
        case 136: return TokenType::Error;
        case 137: return TokenType::Sym_DotDotDot;
        case 138: return TokenType::FloatLit;
        case 139: return TokenType::OctIntLit;
        case 140: return TokenType::OctIntLit;
        case 141: return TokenType::Error;
        case 142: return TokenType::FloatLit;
        case 143: return TokenType::HexIntLit;
        case 144: return TokenType::Sym_LtLtEqual;
        case 145: return TokenType::Sym_GtGtEqual;
        case 146: return TokenType::Kw_and;
        case 147: return TokenType::Kw_asm;
        case 148: return TokenType::Ident;
        case 149: return TokenType::Ident;
        case 150: return TokenType::Ident;
        case 151: return TokenType::Ident;
        case 152: return TokenType::Ident;
        case 153: return TokenType::Ident;
        case 154: return TokenType::Ident;
        case 155: return TokenType::Ident;
        case 156: return TokenType::Ident;
        case 157: return TokenType::Ident;
        case 158: return TokenType::Ident;
        case 159: return TokenType::Ident;
        case 160: return TokenType::Ident;
        case 161: return TokenType::Ident;
        case 162: return TokenType::Ident;
        case 163: return TokenType::Ident;
        case 164: return TokenType::Ident;
        case 165: return TokenType::Ident;
        case 166: return TokenType::Ident;
        case 167: return TokenType::Ident;
        case 168: return TokenType::Kw_for;
        case 169: return TokenType::Ident;
        case 170: return TokenType::Ident;
        case 171: return TokenType::Ident;
        case 172: return TokenType::Kw_int;
        case 173: return TokenType::Ident;
        case 174: return TokenType::Ident;
        case 175: return TokenType::Ident;
        case 176: return TokenType::Kw_new;
        case 177: return TokenType::Kw_not;
        case 178: return TokenType::Ident;
        case 179: return TokenType::Ident;
        case 180: return TokenType::Ident;
        case 181: return TokenType::Ident;
        case 182: return TokenType::Ident;
        case 183: return TokenType::Ident;
        case 184: return TokenType::Ident;
        case 185: return TokenType::Ident;
        case 186: return TokenType::Ident;
        case 187: return TokenType::Ident;
        case 188: return TokenType::Ident;
        case 189: return TokenType::Ident;
        case 190: return TokenType::Ident;
        case 191: return TokenType::Ident;
        case 192: return TokenType::Ident;
        case 193: return TokenType::Ident;
        case 194: return TokenType::Ident;
        case 195: return TokenType::Ident;
        case 196: return TokenType::Kw_try;
        case 197: return TokenType::Ident;
        case 198: return TokenType::Ident;
        case 199: return TokenType::Ident;
        case 200: return TokenType::Ident;
        case 201: return TokenType::Ident;
        case 202: return TokenType::Ident;
        case 203: return TokenType::Ident;
        case 204: return TokenType::Ident;
        case 205: return TokenType::Ident;
        case 206: return TokenType::Kw_xor;
        case 207: return TokenType::Error;
        case 208: return TokenType::Error;
        case 209: return TokenType::Error;
        case 210: return TokenType::Error;
        case 211: return TokenType::HexIntLit;
        case 212: return TokenType::HexIntLit;
        case 213: return TokenType::Ident;
        case 214: return TokenType::Kw_auto;
        case 215: return TokenType::Ident;
        case 216: return TokenType::Ident;
        case 217: return TokenType::Kw_bool;
        case 218: return TokenType::Ident;
        case 219: return TokenType::Kw_case;
        case 220: return TokenType::Ident;
        case 221: return TokenType::Kw_char;
        case 222: return TokenType::Ident;
        case 223: return TokenType::Ident;
        case 224: return TokenType::Ident;
        case 225: return TokenType::Ident;
        case 226: return TokenType::Ident;
        case 227: return TokenType::Ident;
        case 228: return TokenType::Ident;
        case 229: return TokenType::Ident;
        case 230: return TokenType::Kw_else;
        case 231: return TokenType::Kw_enum;
        case 232: return TokenType::Ident;
        case 233: return TokenType::Ident;
        case 234: return TokenType::Ident;
        case 235: return TokenType::Ident;
        case 236: return TokenType::Ident;
        case 237: return TokenType::Ident;
        case 238: return TokenType::Kw_goto;
        case 239: return TokenType::Ident;
        case 240: return TokenType::Kw_long;
        case 241: return TokenType::Ident;
        case 242: return TokenType::Ident;
        case 243: return TokenType::Ident;
        case 244: return TokenType::Ident;
        case 245: return TokenType::Ident;
        case 246: return TokenType::Ident;
        case 247: return TokenType::Ident;
        case 248: return TokenType::Ident;
        case 249: return TokenType::Ident;
        case 250: return TokenType::Ident;
        case 251: return TokenType::Ident;
        case 252: return TokenType::Ident;
        case 253: return TokenType::Ident;
        case 254: return TokenType::Ident;
        case 255: return TokenType::Ident;
        case 256: return TokenType::Ident;
        case 257: return TokenType::Ident;
        case 258: return TokenType::Ident;
        case 259: return TokenType::Kw_this;
        case 260: return TokenType::Ident;
        case 261: return TokenType::Kw_true;
        case 262: return TokenType::Ident;
        case 263: return TokenType::Ident;
        case 264: return TokenType::Ident;
        case 265: return TokenType::Ident;
        case 266: return TokenType::Ident;
        case 267: return TokenType::Kw_void;
        case 268: return TokenType::Ident;
        case 269: return TokenType::Ident;
        case 270: return TokenType::Ident;
        case 271: return TokenType::Ident;
        case 272: return TokenType::Error;
        case 273: return TokenType::Error;
        case 274: return TokenType::Ident;
        case 275: return TokenType::Ident;
        case 276: return TokenType::Kw_bitor;
        case 277: return TokenType::Kw_break;
        case 278: return TokenType::Kw_catch;
        case 279: return TokenType::Kw_class;
        case 280: return TokenType::Kw_compl;
        case 281: return TokenType::Kw_const;
        case 282: return TokenType::Ident;
        case 283: return TokenType::Ident;
        case 284: return TokenType::Ident;
        case 285: return TokenType::Ident;
        case 286: return TokenType::Ident;
        case 287: return TokenType::Ident;
        case 288: return TokenType::Ident;
        case 289: return TokenType::Ident;
        case 290: return TokenType::Kw_false;
        case 291: return TokenType::Kw_float;
        case 292: return TokenType::Ident;
        case 293: return TokenType::Ident;
        case 294: return TokenType::Ident;
        case 295: return TokenType::Ident;
        case 296: return TokenType::Ident;
        case 297: return TokenType::Kw_or_eq;
        case 298: return TokenType::Ident;
        case 299: return TokenType::Ident;
        case 300: return TokenType::Ident;
        case 301: return TokenType::Ident;
        case 302: return TokenType::Ident;
        case 303: return TokenType::Ident;
        case 304: return TokenType::Kw_short;
        case 305: return TokenType::Ident;
        case 306: return TokenType::Ident;
        case 307: return TokenType::Ident;
        case 308: return TokenType::Ident;
        case 309: return TokenType::Ident;
        case 310: return TokenType::Ident;
        case 311: return TokenType::Ident;
        case 312: return TokenType::Kw_throw;
        case 313: return TokenType::Ident;
        case 314: return TokenType::Ident;
        case 315: return TokenType::Ident;
        case 316: return TokenType::Kw_union;
        case 317: return TokenType::Ident;
        case 318: return TokenType::Kw_using;
        case 319: return TokenType::Ident;
        case 320: return TokenType::Ident;
        case 321: return TokenType::Ident;
        case 322: return TokenType::Kw_while;
        case 323: return TokenType::Ident;
        case 324: return TokenType::Error;
        case 325: return TokenType::Error;
        case 326: return TokenType::Kw_and_eq;
        case 327: return TokenType::Kw_bitand;
        case 328: return TokenType::Ident;
        case 329: return TokenType::Ident;
        case 330: return TokenType::Ident;
        case 331: return TokenType::Kw_delete;
        case 332: return TokenType::Kw_double;
        case 333: return TokenType::Ident;
        case 334: return TokenType::Ident;
        case 335: return TokenType::Kw_export;
        case 336: return TokenType::Kw_extern;
        case 337: return TokenType::Kw_friend;
        case 338: return TokenType::Kw_inline;
        case 339: return TokenType::Ident;
        case 340: return TokenType::Ident;
        case 341: return TokenType::Kw_not_eq;
        case 342: return TokenType::Ident;
        case 343: return TokenType::Ident;
        case 344: return TokenType::Kw_public;
        case 345: return TokenType::Ident;
        case 346: return TokenType::Ident;
        case 347: return TokenType::Kw_return;
        case 348: return TokenType::Kw_signed;
        case 349: return TokenType::Kw_sizeof;
        case 350: return TokenType::Kw_static;
        case 351: return TokenType::Kw_struct;
        case 352: return TokenType::Kw_switch;
        case 353: return TokenType::Kw_symbol;
        case 354: return TokenType::Ident;
        case 355: return TokenType::Ident;
        case 356: return TokenType::Kw_typeid;
        case 357: return TokenType::Ident;
        case 358: return TokenType::Ident;
        case 359: return TokenType::Ident;
        case 360: return TokenType::Ident;
        case 361: return TokenType::Ident;
        case 362: return TokenType::Kw_xor_eq;
        case 363: return TokenType::Ident;
        case 364: return TokenType::Ident;
        case 365: return TokenType::Kw_default;
        case 366: return TokenType::Ident;
        case 367: return TokenType::Ident;
        case 368: return TokenType::Kw_mutable;
        case 369: return TokenType::Ident;
        case 370: return TokenType::Kw_private;
        case 371: return TokenType::Ident;
        case 372: return TokenType::Ident;
        case 373: return TokenType::Ident;
        case 374: return TokenType::Ident;
        case 375: return TokenType::Ident;
        case 376: return TokenType::Kw_typedef;
        case 377: return TokenType::Ident;
        case 378: return TokenType::Ident;
        case 379: return TokenType::Kw_virtual;
        case 380: return TokenType::Ident;
        case 381: return TokenType::Kw_wchar_t;
        case 382: return TokenType::Ident;
        case 383: return TokenType::Kw_continue;
        case 384: return TokenType::Ident;
        case 385: return TokenType::Kw_explicit;
        case 386: return TokenType::Ident;
        case 387: return TokenType::Ident;
        case 388: return TokenType::Kw_register;
        case 389: return TokenType::Ident;
        case 390: return TokenType::Ident;
        case 391: return TokenType::Kw_template;
        case 392: return TokenType::Kw_typename;
        case 393: return TokenType::Kw_unsigned;
        case 394: return TokenType::Kw_volatile;
        case 395: return TokenType::Ident;
        case 396: return TokenType::Ident;
        case 397: return TokenType::Kw_namespace;
        case 398: return TokenType::Kw_protected;
        case 399: return TokenType::Ident;
        case 400: return TokenType::Ident;
        case 401: return TokenType::Kw_const_cast;
        case 402: return TokenType::Ident;
        case 403: return TokenType::Ident;
        case 404: return TokenType::Ident;
        case 405: return TokenType::Ident;
        case 406: return TokenType::Ident;
        case 407: return TokenType::Kw_static_cast;
        case 408: return TokenType::Kw_dynamic_cast;
        case 409: return TokenType::Ident;
        case 410: return TokenType::Ident;
        case 411: return TokenType::Ident;
        case 412: return TokenType::Ident;
        case 413: return TokenType::Kw_reinterpret_cast;
        default: return TokenType::Error;
    }
}

ScannerDriver::State CppScanner::advance_0(ScannerDriver::Char c) const
{
    if ('(' == c)
        return State(8);
    if ('#' == c)
        return State(4);
    if ('%' == c)
        return State(5);
    if ('t' == c)
        return State(43);
    if ('\'' == c)
        return State(7);
    if ('w' == c)
        return State(46);
    if (',' == c)
        return State(12);
    if ('"' == c)
        return State(3);
    if (':' == c)
        return State(18);
    if (between<Char>('y', c, 'z'))
        return State(24);
    if ('?' == c)
        return State(23);
    if ('e' == c)
        return State(32);
    if (']' == c)
        return State(26);
    if (L'\u000D' == c)
        return State(1);
    if ('-' == c)
        return State(13);
    if ('g' == c)
        return State(34);
    if ('x' == c)
        return State(47);
    if ('u' == c)
        return State(44);
    if ('h' == c)
        return State(24);
    if (';' == c)
        return State(19);
    if ('d' == c)
        return State(31);
    if ('_' == c)
        return State(24);
    if ('!' == c)
        return State(2);
    if (between<Char>('j', c, 'k'))
        return State(24);
    if ('=' == c)
        return State(21);
    if ('s' == c)
        return State(42);
    if (')' == c)
        return State(9);
    if ('c' == c)
        return State(30);
    if (between<Char>(L'\u0009', c, L'\u000A'))
        return State(1);
    if ('>' == c)
        return State(22);
    if ('*' == c)
        return State(10);
    if ('q' == c)
        return State(24);
    if ('v' == c)
        return State(45);
    if ('a' == c)
        return State(28);
    if ('n' == c)
        return State(38);
    if ('~' == c)
        return State(51);
    if ('i' == c)
        return State(35);
    if ('<' == c)
        return State(20);
    if ('{' == c)
        return State(48);
    if ('|' == c)
        return State(49);
    if ('f' == c)
        return State(33);
    if ('[' == c)
        return State(25);
    if (' ' == c)
        return State(1);
    if ('}' == c)
        return State(50);
    if ('m' == c)
        return State(37);
    if ('^' == c)
        return State(27);
    if ('b' == c)
        return State(29);
    if (between<Char>('1', c, '9'))
        return State(17);
    if ('&' == c)
        return State(6);
    if ('/' == c)
        return State(15);
    if ('.' == c)
        return State(14);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if ('+' == c)
        return State(11);
    if ('0' == c)
        return State(16);
    if ('l' == c)
        return State(36);
    if ('p' == c)
        return State(40);
    if ('o' == c)
        return State(39);
    if ('r' == c)
        return State(41);
    return errorState();
}

ScannerDriver::State CppScanner::advance_1(ScannerDriver::Char c) const
{
    if (between<Char>(L'\u0009', c, L'\u000A'))
        return State(1);
    if (L'\u000D' == c)
        return State(1);
    if (' ' == c)
        return State(1);
    return errorState();
}

ScannerDriver::State CppScanner::advance_2(ScannerDriver::Char c) const
{
    if ('=' == c)
        return State(52);
    return errorState();
}

ScannerDriver::State CppScanner::advance_3(ScannerDriver::Char c) const
{
    if ('"' == c)
        return State(53);
    if (between<Char>(']', c, '~'))
        return State(3);
    if (between<Char>('#', c, '['))
        return State(3);
    if (between<Char>(' ', c, '!'))
        return State(3);
    if (between<Char>(L'\u0080', c, L'\uFFFF'))
        return State(3);
    if ('\\' == c)
        return State(54);
    return errorState();
}

ScannerDriver::State CppScanner::advance_4(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_5(ScannerDriver::Char c) const
{
    if ('=' == c)
        return State(55);
    return errorState();
}

ScannerDriver::State CppScanner::advance_6(ScannerDriver::Char c) const
{
    if ('&' == c)
        return State(56);
    if ('=' == c)
        return State(57);
    return errorState();
}

ScannerDriver::State CppScanner::advance_7(ScannerDriver::Char c) const
{
    if (between<Char>(']', c, '~'))
        return State(58);
    if (between<Char>('#', c, '['))
        return State(58);
    if (between<Char>(' ', c, '!'))
        return State(58);
    if (between<Char>(L'\u0080', c, L'\uFFFF'))
        return State(58);
    if ('\\' == c)
        return State(59);
    return errorState();
}

ScannerDriver::State CppScanner::advance_8(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_9(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_10(ScannerDriver::Char c) const
{
    if ('=' == c)
        return State(60);
    return errorState();
}

ScannerDriver::State CppScanner::advance_11(ScannerDriver::Char c) const
{
    if ('+' == c)
        return State(61);
    if ('=' == c)
        return State(62);
    return errorState();
}

ScannerDriver::State CppScanner::advance_12(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_13(ScannerDriver::Char c) const
{
    if ('-' == c)
        return State(63);
    if ('=' == c)
        return State(64);
    return errorState();
}

ScannerDriver::State CppScanner::advance_14(ScannerDriver::Char c) const
{
    if (between<Char>('0', c, '9'))
        return State(66);
    if ('.' == c)
        return State(65);
    return errorState();
}

ScannerDriver::State CppScanner::advance_15(ScannerDriver::Char c) const
{
    if ('=' == c)
        return State(67);
    return errorState();
}

ScannerDriver::State CppScanner::advance_16(ScannerDriver::Char c) const
{
    if ('U' == c)
        return State(73);
    if ('E' == c)
        return State(71);
    if ('e' == c)
        return State(71);
    if ('F' == c)
        return State(70);
    if ('x' == c)
        return State(74);
    if ('u' == c)
        return State(73);
    if ('d' == c)
        return State(70);
    if (between<Char>('8', c, '9'))
        return State(17);
    if ('D' == c)
        return State(70);
    if ('f' == c)
        return State(70);
    if ('L' == c)
        return State(72);
    if (between<Char>('0', c, '7'))
        return State(69);
    if ('.' == c)
        return State(68);
    if ('l' == c)
        return State(72);
    return errorState();
}

ScannerDriver::State CppScanner::advance_17(ScannerDriver::Char c) const
{
    if ('U' == c)
        return State(73);
    if ('E' == c)
        return State(71);
    if ('e' == c)
        return State(71);
    if ('F' == c)
        return State(70);
    if ('u' == c)
        return State(73);
    if ('d' == c)
        return State(70);
    if ('D' == c)
        return State(70);
    if ('f' == c)
        return State(70);
    if ('L' == c)
        return State(72);
    if ('.' == c)
        return State(68);
    if (between<Char>('0', c, '9'))
        return State(17);
    if ('l' == c)
        return State(72);
    return errorState();
}

ScannerDriver::State CppScanner::advance_18(ScannerDriver::Char c) const
{
    if (':' == c)
        return State(75);
    return errorState();
}

ScannerDriver::State CppScanner::advance_19(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_20(ScannerDriver::Char c) const
{
    if ('<' == c)
        return State(76);
    if ('=' == c)
        return State(77);
    return errorState();
}

ScannerDriver::State CppScanner::advance_21(ScannerDriver::Char c) const
{
    if ('=' == c)
        return State(78);
    return errorState();
}

ScannerDriver::State CppScanner::advance_22(ScannerDriver::Char c) const
{
    if ('>' == c)
        return State(80);
    if ('=' == c)
        return State(79);
    return errorState();
}

ScannerDriver::State CppScanner::advance_23(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_24(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_25(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_26(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_27(ScannerDriver::Char c) const
{
    if ('=' == c)
        return State(81);
    return errorState();
}

ScannerDriver::State CppScanner::advance_28(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(24);
    if ('u' == c)
        return State(84);
    if (between<Char>('o', c, 'r'))
        return State(24);
    if (between<Char>('v', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(83);
    if ('n' == c)
        return State(82);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_29(ScannerDriver::Char c) const
{
    if (between<Char>('p', c, 'q'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(85);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('j', c, 'n'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(86);
    if ('r' == c)
        return State(87);
    return errorState();
}

ScannerDriver::State CppScanner::advance_30(ScannerDriver::Char c) const
{
    if (between<Char>('i', c, 'k'))
        return State(24);
    if (between<Char>('m', c, 'n'))
        return State(24);
    if ('h' == c)
        return State(89);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(88);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('b', c, 'g'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(90);
    if ('o' == c)
        return State(91);
    return errorState();
}

ScannerDriver::State CppScanner::advance_31(ScannerDriver::Char c) const
{
    if ('z' == c)
        return State(24);
    if ('y' == c)
        return State(94);
    if ('e' == c)
        return State(92);
    if (between<Char>('p', c, 'x'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'n'))
        return State(24);
    if ('o' == c)
        return State(93);
    return errorState();
}

ScannerDriver::State CppScanner::advance_32(ScannerDriver::Char c) const
{
    if (between<Char>('y', c, 'z'))
        return State(24);
    if ('x' == c)
        return State(97);
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(96);
    if (between<Char>('o', c, 'w'))
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if ('m' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(95);
    return errorState();
}

ScannerDriver::State CppScanner::advance_33(ScannerDriver::Char c) const
{
    if (between<Char>('p', c, 'q'))
        return State(24);
    if (between<Char>('m', c, 'n'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(98);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(99);
    if ('o' == c)
        return State(100);
    if ('r' == c)
        return State(101);
    if (between<Char>('b', c, 'k'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_34(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'n'))
        return State(24);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(102);
    return errorState();
}

ScannerDriver::State CppScanner::advance_35(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'e'))
        return State(24);
    if (between<Char>('g', c, 'm'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(104);
    if ('f' == c)
        return State(103);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_36(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'n'))
        return State(24);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(105);
    return errorState();
}

ScannerDriver::State CppScanner::advance_37(ScannerDriver::Char c) const
{
    if ('u' == c)
        return State(106);
    if (between<Char>('v', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 't'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_38(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(108);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('b', c, 'd'))
        return State(24);
    if ('a' == c)
        return State(107);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'n'))
        return State(24);
    if ('o' == c)
        return State(109);
    return errorState();
}

ScannerDriver::State CppScanner::advance_39(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(110);
    return errorState();
}

ScannerDriver::State CppScanner::advance_40(ScannerDriver::Char c) const
{
    if (between<Char>('s', c, 't'))
        return State(24);
    if ('u' == c)
        return State(112);
    if (between<Char>('v', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(111);
    return errorState();
}

ScannerDriver::State CppScanner::advance_41(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(113);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_42(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(116);
    if ('z' == c)
        return State(24);
    if ('w' == c)
        return State(117);
    if ('y' == c)
        return State(118);
    if ('x' == c)
        return State(24);
    if ('h' == c)
        return State(114);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'g'))
        return State(24);
    if (between<Char>('u', c, 'v'))
        return State(24);
    if ('i' == c)
        return State(115);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('j', c, 's'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_43(ScannerDriver::Char c) const
{
    if ('z' == c)
        return State(24);
    if ('y' == c)
        return State(122);
    if ('e' == c)
        return State(119);
    if ('h' == c)
        return State(120);
    if (between<Char>('i', c, 'q'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('s', c, 'x'))
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('f', c, 'g'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(121);
    return errorState();
}

ScannerDriver::State CppScanner::advance_44(ScannerDriver::Char c) const
{
    if (between<Char>('o', c, 'r'))
        return State(24);
    if (between<Char>('t', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(124);
    if ('n' == c)
        return State(123);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_45(ScannerDriver::Char c) const
{
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(125);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('j', c, 'n'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(126);
    return errorState();
}

ScannerDriver::State CppScanner::advance_46(ScannerDriver::Char c) const
{
    if ('h' == c)
        return State(128);
    if ('_' == c)
        return State(24);
    if ('c' == c)
        return State(127);
    if (between<Char>('a', c, 'b'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('i', c, 'z'))
        return State(24);
    if (between<Char>('d', c, 'g'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_47(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'n'))
        return State(24);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(129);
    return errorState();
}

ScannerDriver::State CppScanner::advance_48(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_49(ScannerDriver::Char c) const
{
    if ('=' == c)
        return State(130);
    if ('|' == c)
        return State(131);
    return errorState();
}

ScannerDriver::State CppScanner::advance_50(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_51(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_52(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_53(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_54(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(3);
    if ('\'' == c)
        return State(3);
    if ('"' == c)
        return State(3);
    if ('?' == c)
        return State(3);
    if ('u' == c)
        return State(133);
    if (between<Char>('a', c, 'b'))
        return State(3);
    if ('v' == c)
        return State(3);
    if ('n' == c)
        return State(3);
    if ('f' == c)
        return State(3);
    if (between<Char>('0', c, '7'))
        return State(132);
    if ('\\' == c)
        return State(3);
    if ('r' == c)
        return State(3);
    return errorState();
}

ScannerDriver::State CppScanner::advance_55(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_56(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_57(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_58(ScannerDriver::Char c) const
{
    if ('\'' == c)
        return State(134);
    return errorState();
}

ScannerDriver::State CppScanner::advance_59(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(58);
    if ('\'' == c)
        return State(58);
    if ('"' == c)
        return State(58);
    if ('?' == c)
        return State(58);
    if ('u' == c)
        return State(136);
    if (between<Char>('a', c, 'b'))
        return State(58);
    if ('v' == c)
        return State(58);
    if ('n' == c)
        return State(58);
    if ('f' == c)
        return State(58);
    if (between<Char>('0', c, '7'))
        return State(135);
    if ('\\' == c)
        return State(58);
    if ('r' == c)
        return State(58);
    return errorState();
}

ScannerDriver::State CppScanner::advance_60(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_61(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_62(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_63(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_64(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_65(ScannerDriver::Char c) const
{
    if ('.' == c)
        return State(137);
    return errorState();
}

ScannerDriver::State CppScanner::advance_66(ScannerDriver::Char c) const
{
    if ('E' == c)
        return State(71);
    if ('e' == c)
        return State(71);
    if ('F' == c)
        return State(70);
    if ('d' == c)
        return State(70);
    if ('D' == c)
        return State(70);
    if ('f' == c)
        return State(70);
    if (between<Char>('0', c, '9'))
        return State(66);
    return errorState();
}

ScannerDriver::State CppScanner::advance_67(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_68(ScannerDriver::Char c) const
{
    if ('E' == c)
        return State(71);
    if ('e' == c)
        return State(71);
    if ('F' == c)
        return State(70);
    if ('d' == c)
        return State(70);
    if ('D' == c)
        return State(70);
    if ('f' == c)
        return State(70);
    if (between<Char>('0', c, '9'))
        return State(138);
    return errorState();
}

ScannerDriver::State CppScanner::advance_69(ScannerDriver::Char c) const
{
    if ('U' == c)
        return State(140);
    if ('E' == c)
        return State(71);
    if ('e' == c)
        return State(71);
    if ('F' == c)
        return State(70);
    if ('u' == c)
        return State(140);
    if ('d' == c)
        return State(70);
    if (between<Char>('8', c, '9'))
        return State(17);
    if ('D' == c)
        return State(70);
    if ('f' == c)
        return State(70);
    if ('L' == c)
        return State(139);
    if (between<Char>('0', c, '7'))
        return State(69);
    if ('.' == c)
        return State(68);
    if ('l' == c)
        return State(139);
    return errorState();
}

ScannerDriver::State CppScanner::advance_70(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_71(ScannerDriver::Char c) const
{
    if (between<Char>('0', c, '9'))
        return State(142);
    if ('-' == c)
        return State(141);
    if ('+' == c)
        return State(141);
    return errorState();
}

ScannerDriver::State CppScanner::advance_72(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_73(ScannerDriver::Char c) const
{
    if ('l' == c)
        return State(72);
    if ('L' == c)
        return State(72);
    return errorState();
}

ScannerDriver::State CppScanner::advance_74(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'f'))
        return State(143);
    if (between<Char>('0', c, '9'))
        return State(143);
    if (between<Char>('A', c, 'F'))
        return State(143);
    return errorState();
}

ScannerDriver::State CppScanner::advance_75(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_76(ScannerDriver::Char c) const
{
    if ('=' == c)
        return State(144);
    return errorState();
}

ScannerDriver::State CppScanner::advance_77(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_78(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_79(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_80(ScannerDriver::Char c) const
{
    if ('=' == c)
        return State(145);
    return errorState();
}

ScannerDriver::State CppScanner::advance_81(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_82(ScannerDriver::Char c) const
{
    if ('d' == c)
        return State(146);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'c'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('e', c, 'z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_83(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'l'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('n', c, 'z'))
        return State(24);
    if ('m' == c)
        return State(147);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_84(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(148);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_85(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(149);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_86(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'n'))
        return State(24);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(150);
    return errorState();
}

ScannerDriver::State CppScanner::advance_87(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(151);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_88(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(153);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(152);
    if (between<Char>('a', c, 'r'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_89(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(154);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_90(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(155);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_91(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'l'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(157);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if ('m' == c)
        return State(156);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_92(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'e'))
        return State(24);
    if (between<Char>('g', c, 'k'))
        return State(24);
    if (between<Char>('m', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('f' == c)
        return State(158);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(159);
    return errorState();
}

ScannerDriver::State CppScanner::advance_93(ScannerDriver::Char c) const
{
    if ('u' == c)
        return State(160);
    if (between<Char>('v', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 't'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_94(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(161);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_95(ScannerDriver::Char c) const
{
    if (between<Char>('t', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(162);
    if (between<Char>('a', c, 'r'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_96(ScannerDriver::Char c) const
{
    if ('u' == c)
        return State(163);
    if (between<Char>('v', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 't'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_97(ScannerDriver::Char c) const
{
    if (between<Char>('q', c, 's'))
        return State(24);
    if ('t' == c)
        return State(165);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'o'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('p' == c)
        return State(164);
    return errorState();
}

ScannerDriver::State CppScanner::advance_98(ScannerDriver::Char c) const
{
    if (between<Char>('m', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(166);
    return errorState();
}

ScannerDriver::State CppScanner::advance_99(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'n'))
        return State(24);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(167);
    return errorState();
}

ScannerDriver::State CppScanner::advance_100(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(168);
    return errorState();
}

ScannerDriver::State CppScanner::advance_101(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(169);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_102(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(170);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_103(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_104(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(172);
    if (between<Char>('m', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(171);
    return errorState();
}

ScannerDriver::State CppScanner::advance_105(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(173);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_106(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(174);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_107(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'l'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('n', c, 'z'))
        return State(24);
    if ('m' == c)
        return State(175);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_108(ScannerDriver::Char c) const
{
    if (between<Char>('x', c, 'z'))
        return State(24);
    if ('w' == c)
        return State(176);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'v'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_109(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(177);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_110(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(178);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_111(ScannerDriver::Char c) const
{
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(179);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('j', c, 'n'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(180);
    return errorState();
}

ScannerDriver::State CppScanner::advance_112(ScannerDriver::Char c) const
{
    if (between<Char>('c', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(24);
    if ('b' == c)
        return State(181);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_113(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(184);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('g' == c)
        return State(182);
    if ('h' == c)
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(183);
    if (between<Char>('a', c, 'f'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('j', c, 's'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_114(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'n'))
        return State(24);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(185);
    return errorState();
}

ScannerDriver::State CppScanner::advance_115(ScannerDriver::Char c) const
{
    if ('z' == c)
        return State(187);
    if ('g' == c)
        return State(186);
    if ('_' == c)
        return State(24);
    if (between<Char>('h', c, 'y'))
        return State(24);
    if (between<Char>('a', c, 'f'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_116(ScannerDriver::Char c) const
{
    if (between<Char>('b', c, 'q'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(188);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(189);
    return errorState();
}

ScannerDriver::State CppScanner::advance_117(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(190);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_118(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'l'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('n', c, 'z'))
        return State(24);
    if ('m' == c)
        return State(191);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_119(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'l'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('n', c, 'z'))
        return State(24);
    if ('m' == c)
        return State(192);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_120(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'q'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(193);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(194);
    return errorState();
}

ScannerDriver::State CppScanner::advance_121(ScannerDriver::Char c) const
{
    if ('z' == c)
        return State(24);
    if ('y' == c)
        return State(196);
    if ('u' == c)
        return State(195);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 't'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('v', c, 'x'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_122(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'o'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('q', c, 'z'))
        return State(24);
    if ('p' == c)
        return State(197);
    return errorState();
}

ScannerDriver::State CppScanner::advance_123(ScannerDriver::Char c) const
{
    if (between<Char>('t', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(199);
    if (between<Char>('j', c, 'r'))
        return State(24);
    if ('i' == c)
        return State(198);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_124(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(200);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_125(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(201);
    return errorState();
}

ScannerDriver::State CppScanner::advance_126(ScannerDriver::Char c) const
{
    if (between<Char>('m', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('j', c, 'k'))
        return State(24);
    if ('i' == c)
        return State(202);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(203);
    return errorState();
}

ScannerDriver::State CppScanner::advance_127(ScannerDriver::Char c) const
{
    if ('h' == c)
        return State(204);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'g'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('i', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_128(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(205);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_129(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(206);
    return errorState();
}

ScannerDriver::State CppScanner::advance_130(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_131(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_132(ScannerDriver::Char c) const
{
    if (between<Char>('8', c, '['))
        return State(3);
    if ('"' == c)
        return State(53);
    if (between<Char>(']', c, '~'))
        return State(3);
    if (between<Char>(' ', c, '!'))
        return State(3);
    if (between<Char>('#', c, '/'))
        return State(3);
    if (between<Char>('0', c, '7'))
        return State(207);
    if (between<Char>(L'\u0080', c, L'\uFFFF'))
        return State(3);
    if ('\\' == c)
        return State(54);
    return errorState();
}

ScannerDriver::State CppScanner::advance_133(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'f'))
        return State(208);
    if (between<Char>('0', c, '9'))
        return State(208);
    if (between<Char>('A', c, 'F'))
        return State(208);
    return errorState();
}

ScannerDriver::State CppScanner::advance_134(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_135(ScannerDriver::Char c) const
{
    if ('\'' == c)
        return State(134);
    if (between<Char>('0', c, '7'))
        return State(209);
    return errorState();
}

ScannerDriver::State CppScanner::advance_136(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'f'))
        return State(210);
    if (between<Char>('0', c, '9'))
        return State(210);
    if (between<Char>('A', c, 'F'))
        return State(210);
    return errorState();
}

ScannerDriver::State CppScanner::advance_137(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_138(ScannerDriver::Char c) const
{
    if ('E' == c)
        return State(71);
    if ('e' == c)
        return State(71);
    if ('F' == c)
        return State(70);
    if ('d' == c)
        return State(70);
    if ('D' == c)
        return State(70);
    if ('f' == c)
        return State(70);
    if (between<Char>('0', c, '9'))
        return State(138);
    return errorState();
}

ScannerDriver::State CppScanner::advance_139(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_140(ScannerDriver::Char c) const
{
    if ('l' == c)
        return State(139);
    if ('L' == c)
        return State(139);
    return errorState();
}

ScannerDriver::State CppScanner::advance_141(ScannerDriver::Char c) const
{
    if (between<Char>('0', c, '9'))
        return State(142);
    return errorState();
}

ScannerDriver::State CppScanner::advance_142(ScannerDriver::Char c) const
{
    if ('F' == c)
        return State(70);
    if ('d' == c)
        return State(70);
    if ('D' == c)
        return State(70);
    if ('f' == c)
        return State(70);
    if (between<Char>('0', c, '9'))
        return State(142);
    return errorState();
}

ScannerDriver::State CppScanner::advance_143(ScannerDriver::Char c) const
{
    if ('U' == c)
        return State(212);
    if (between<Char>('A', c, 'F'))
        return State(143);
    if ('u' == c)
        return State(212);
    if ('L' == c)
        return State(211);
    if (between<Char>('a', c, 'f'))
        return State(143);
    if (between<Char>('0', c, '9'))
        return State(143);
    if ('l' == c)
        return State(211);
    return errorState();
}

ScannerDriver::State CppScanner::advance_144(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_145(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_146(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(213);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_147(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_148(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'n'))
        return State(24);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(214);
    return errorState();
}

ScannerDriver::State CppScanner::advance_149(ScannerDriver::Char c) const
{
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(215);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(216);
    if (between<Char>('b', c, 'n'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_150(ScannerDriver::Char c) const
{
    if (between<Char>('m', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(217);
    return errorState();
}

ScannerDriver::State CppScanner::advance_151(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(218);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_152(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(219);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_153(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('d', c, 'z'))
        return State(24);
    if ('c' == c)
        return State(220);
    if (between<Char>('a', c, 'b'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_154(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(221);
    return errorState();
}

ScannerDriver::State CppScanner::advance_155(ScannerDriver::Char c) const
{
    if (between<Char>('t', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(222);
    if (between<Char>('a', c, 'r'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_156(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'o'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('q', c, 'z'))
        return State(24);
    if ('p' == c)
        return State(223);
    return errorState();
}

ScannerDriver::State CppScanner::advance_157(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(225);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(224);
    if (between<Char>('a', c, 'r'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_158(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(226);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_159(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(227);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_160(ScannerDriver::Char c) const
{
    if (between<Char>('c', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(24);
    if ('b' == c)
        return State(228);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_161(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(229);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_162(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(230);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_163(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'l'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('n', c, 'z'))
        return State(24);
    if ('m' == c)
        return State(231);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_164(ScannerDriver::Char c) const
{
    if (between<Char>('m', c, 'n'))
        return State(24);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(232);
    if ('o' == c)
        return State(233);
    return errorState();
}

ScannerDriver::State CppScanner::advance_165(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(234);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_166(ScannerDriver::Char c) const
{
    if (between<Char>('t', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(235);
    if (between<Char>('a', c, 'r'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_167(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(236);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_168(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_169(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(237);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_170(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'n'))
        return State(24);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(238);
    return errorState();
}

ScannerDriver::State CppScanner::advance_171(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(239);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_172(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_173(ScannerDriver::Char c) const
{
    if (between<Char>('h', c, 'z'))
        return State(24);
    if ('g' == c)
        return State(240);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'f'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_174(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(241);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_175(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(242);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_176(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_177(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(243);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_178(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(244);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_179(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'u'))
        return State(24);
    if (between<Char>('w', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('v' == c)
        return State(245);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_180(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(246);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_181(ScannerDriver::Char c) const
{
    if (between<Char>('m', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(247);
    return errorState();
}

ScannerDriver::State CppScanner::advance_182(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(248);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_183(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(249);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_184(ScannerDriver::Char c) const
{
    if ('u' == c)
        return State(250);
    if (between<Char>('v', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 't'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_185(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(251);
    return errorState();
}

ScannerDriver::State CppScanner::advance_186(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(252);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_187(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(253);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_188(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(254);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_189(ScannerDriver::Char c) const
{
    if ('u' == c)
        return State(255);
    if (between<Char>('v', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 't'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_190(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(256);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_191(ScannerDriver::Char c) const
{
    if (between<Char>('c', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(24);
    if ('b' == c)
        return State(257);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_192(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'o'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('q', c, 'z'))
        return State(24);
    if ('p' == c)
        return State(258);
    return errorState();
}

ScannerDriver::State CppScanner::advance_193(ScannerDriver::Char c) const
{
    if (between<Char>('t', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(259);
    if (between<Char>('a', c, 'r'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_194(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'n'))
        return State(24);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(260);
    return errorState();
}

ScannerDriver::State CppScanner::advance_195(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(261);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_196(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_197(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(262);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_198(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'n'))
        return State(24);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(263);
    return errorState();
}

ScannerDriver::State CppScanner::advance_199(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(264);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_200(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(265);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_201(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(266);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_202(ScannerDriver::Char c) const
{
    if ('d' == c)
        return State(267);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'c'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('e', c, 'z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_203(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(268);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_204(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(269);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_205(ScannerDriver::Char c) const
{
    if (between<Char>('m', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(270);
    return errorState();
}

ScannerDriver::State CppScanner::advance_206(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(271);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_207(ScannerDriver::Char c) const
{
    if (between<Char>('8', c, '['))
        return State(3);
    if ('"' == c)
        return State(53);
    if (between<Char>(']', c, '~'))
        return State(3);
    if (between<Char>(' ', c, '!'))
        return State(3);
    if (between<Char>('#', c, '/'))
        return State(3);
    if (between<Char>('0', c, '7'))
        return State(3);
    if (between<Char>(L'\u0080', c, L'\uFFFF'))
        return State(3);
    if ('\\' == c)
        return State(54);
    return errorState();
}

ScannerDriver::State CppScanner::advance_208(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'f'))
        return State(272);
    if (between<Char>('0', c, '9'))
        return State(272);
    if (between<Char>('A', c, 'F'))
        return State(272);
    return errorState();
}

ScannerDriver::State CppScanner::advance_209(ScannerDriver::Char c) const
{
    if ('\'' == c)
        return State(134);
    if (between<Char>('0', c, '7'))
        return State(58);
    return errorState();
}

ScannerDriver::State CppScanner::advance_210(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'f'))
        return State(273);
    if (between<Char>('0', c, '9'))
        return State(273);
    if (between<Char>('A', c, 'F'))
        return State(273);
    return errorState();
}

ScannerDriver::State CppScanner::advance_211(ScannerDriver::Char c) const
{
    (void) c;
    return errorState();
}

ScannerDriver::State CppScanner::advance_212(ScannerDriver::Char c) const
{
    if ('l' == c)
        return State(211);
    if ('L' == c)
        return State(211);
    return errorState();
}

ScannerDriver::State CppScanner::advance_213(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(274);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_214(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_215(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(275);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_216(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(276);
    return errorState();
}

ScannerDriver::State CppScanner::advance_217(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_218(ScannerDriver::Char c) const
{
    if (between<Char>('l', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('k' == c)
        return State(277);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('a', c, 'j'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_219(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_220(ScannerDriver::Char c) const
{
    if ('h' == c)
        return State(278);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'g'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('i', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_221(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_222(ScannerDriver::Char c) const
{
    if (between<Char>('t', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(279);
    if (between<Char>('a', c, 'r'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_223(ScannerDriver::Char c) const
{
    if (between<Char>('m', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(280);
    return errorState();
}

ScannerDriver::State CppScanner::advance_224(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(281);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_225(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(282);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_226(ScannerDriver::Char c) const
{
    if ('u' == c)
        return State(283);
    if (between<Char>('v', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 't'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_227(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(284);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_228(ScannerDriver::Char c) const
{
    if (between<Char>('m', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(285);
    return errorState();
}

ScannerDriver::State CppScanner::advance_229(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'l'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('n', c, 'z'))
        return State(24);
    if ('m' == c)
        return State(286);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_230(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_231(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_232(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(287);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_233(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(288);
    return errorState();
}

ScannerDriver::State CppScanner::advance_234(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(289);
    return errorState();
}

ScannerDriver::State CppScanner::advance_235(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(290);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_236(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(291);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_237(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(292);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_238(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_239(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(293);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_240(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_241(ScannerDriver::Char c) const
{
    if (between<Char>('c', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(24);
    if ('b' == c)
        return State(294);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_242(ScannerDriver::Char c) const
{
    if (between<Char>('t', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(295);
    if (between<Char>('a', c, 'r'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_243(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(296);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_244(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('q' == c)
        return State(297);
    if (between<Char>('a', c, 'p'))
        return State(24);
    if (between<Char>('r', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_245(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(298);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_246(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(299);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_247(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(300);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_248(ScannerDriver::Char c) const
{
    if (between<Char>('t', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(301);
    if (between<Char>('a', c, 'r'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_249(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(302);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_250(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(303);
    return errorState();
}

ScannerDriver::State CppScanner::advance_251(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(304);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_252(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(305);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_253(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'n'))
        return State(24);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(306);
    return errorState();
}

ScannerDriver::State CppScanner::advance_254(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(307);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_255(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('d', c, 'z'))
        return State(24);
    if ('c' == c)
        return State(308);
    if (between<Char>('a', c, 'b'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_256(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('d', c, 'z'))
        return State(24);
    if ('c' == c)
        return State(309);
    if (between<Char>('a', c, 'b'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_257(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'n'))
        return State(24);
    if (between<Char>('p', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('o' == c)
        return State(310);
    return errorState();
}

ScannerDriver::State CppScanner::advance_258(ScannerDriver::Char c) const
{
    if (between<Char>('m', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(311);
    return errorState();
}

ScannerDriver::State CppScanner::advance_259(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_260(ScannerDriver::Char c) const
{
    if (between<Char>('x', c, 'z'))
        return State(24);
    if ('w' == c)
        return State(312);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'v'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_261(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_262(ScannerDriver::Char c) const
{
    if ('d' == c)
        return State(313);
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(315);
    if (between<Char>('e', c, 'h'))
        return State(24);
    if ('i' == c)
        return State(314);
    if (between<Char>('a', c, 'c'))
        return State(24);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('j', c, 'm'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_263(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(316);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_264(ScannerDriver::Char c) const
{
    if (between<Char>('h', c, 'z'))
        return State(24);
    if ('g' == c)
        return State(317);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'f'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_265(ScannerDriver::Char c) const
{
    if (between<Char>('h', c, 'z'))
        return State(24);
    if ('g' == c)
        return State(318);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'f'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_266(ScannerDriver::Char c) const
{
    if ('u' == c)
        return State(319);
    if (between<Char>('v', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 't'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_267(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_268(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(320);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_269(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(321);
    return errorState();
}

ScannerDriver::State CppScanner::advance_270(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(322);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_271(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(323);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_272(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'f'))
        return State(324);
    if (between<Char>('0', c, '9'))
        return State(324);
    if (between<Char>('A', c, 'F'))
        return State(324);
    return errorState();
}

ScannerDriver::State CppScanner::advance_273(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'f'))
        return State(325);
    if (between<Char>('0', c, '9'))
        return State(325);
    if (between<Char>('A', c, 'F'))
        return State(325);
    return errorState();
}

ScannerDriver::State CppScanner::advance_274(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('q' == c)
        return State(326);
    if (between<Char>('a', c, 'p'))
        return State(24);
    if (between<Char>('r', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_275(ScannerDriver::Char c) const
{
    if ('d' == c)
        return State(327);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'c'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('e', c, 'z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_276(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_277(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_278(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_279(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_280(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_281(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(328);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_282(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(329);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_283(ScannerDriver::Char c) const
{
    if (between<Char>('m', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(330);
    return errorState();
}

ScannerDriver::State CppScanner::advance_284(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(331);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_285(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(332);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_286(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(333);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_287(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('d', c, 'z'))
        return State(24);
    if ('c' == c)
        return State(334);
    if (between<Char>('a', c, 'b'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_288(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(335);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_289(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(336);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_290(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_291(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_292(ScannerDriver::Char c) const
{
    if ('d' == c)
        return State(337);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'c'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('e', c, 'z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_293(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(338);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_294(ScannerDriver::Char c) const
{
    if (between<Char>('m', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(339);
    return errorState();
}

ScannerDriver::State CppScanner::advance_295(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'o'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('q', c, 'z'))
        return State(24);
    if ('p' == c)
        return State(340);
    return errorState();
}

ScannerDriver::State CppScanner::advance_296(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('q' == c)
        return State(341);
    if (between<Char>('a', c, 'p'))
        return State(24);
    if (between<Char>('r', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_297(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_298(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(342);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_299(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('d', c, 'z'))
        return State(24);
    if ('c' == c)
        return State(343);
    if (between<Char>('a', c, 'b'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_300(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('d', c, 'z'))
        return State(24);
    if ('c' == c)
        return State(344);
    if (between<Char>('a', c, 'b'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_301(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(345);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_302(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(346);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_303(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(347);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_304(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_305(ScannerDriver::Char c) const
{
    if ('d' == c)
        return State(348);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'c'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('e', c, 'z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_306(ScannerDriver::Char c) const
{
    if (between<Char>('g', c, 'z'))
        return State(24);
    if (between<Char>('a', c, 'e'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('f' == c)
        return State(349);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_307(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('d', c, 'z'))
        return State(24);
    if ('c' == c)
        return State(350);
    if (between<Char>('a', c, 'b'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_308(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(351);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_309(ScannerDriver::Char c) const
{
    if ('h' == c)
        return State(352);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'g'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('i', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_310(ScannerDriver::Char c) const
{
    if (between<Char>('m', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(353);
    return errorState();
}

ScannerDriver::State CppScanner::advance_311(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(354);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_312(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_313(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(355);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_314(ScannerDriver::Char c) const
{
    if ('d' == c)
        return State(356);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'c'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('e', c, 'z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_315(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(357);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_316(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_317(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('n' == c)
        return State(358);
    if (between<Char>('a', c, 'm'))
        return State(24);
    if (between<Char>('o', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_318(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_319(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(359);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_320(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(360);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_321(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(361);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_322(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_323(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('q' == c)
        return State(362);
    if (between<Char>('a', c, 'p'))
        return State(24);
    if (between<Char>('r', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_324(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'f'))
        return State(3);
    if (between<Char>('0', c, '9'))
        return State(3);
    if (between<Char>('A', c, 'F'))
        return State(3);
    return errorState();
}

ScannerDriver::State CppScanner::advance_325(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'f'))
        return State(58);
    if (between<Char>('0', c, '9'))
        return State(58);
    if (between<Char>('A', c, 'F'))
        return State(58);
    return errorState();
}

ScannerDriver::State CppScanner::advance_326(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_327(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_328(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('d', c, 'z'))
        return State(24);
    if ('c' == c)
        return State(363);
    if (between<Char>('a', c, 'b'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_329(ScannerDriver::Char c) const
{
    if ('u' == c)
        return State(364);
    if (between<Char>('v', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 't'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_330(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(365);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_331(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_332(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_333(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('d', c, 'z'))
        return State(24);
    if ('c' == c)
        return State(366);
    if (between<Char>('a', c, 'b'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_334(ScannerDriver::Char c) const
{
    if (between<Char>('j', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('i' == c)
        return State(367);
    if (between<Char>('a', c, 'h'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_335(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_336(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_337(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_338(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_339(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(368);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_340(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(369);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_341(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_342(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(370);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_343(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(371);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_344(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_345(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(372);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_346(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(373);
    return errorState();
}

ScannerDriver::State CppScanner::advance_347(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_348(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_349(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_350(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(374);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_351(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_352(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_353(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_354(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(375);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_355(ScannerDriver::Char c) const
{
    if (between<Char>('g', c, 'z'))
        return State(24);
    if (between<Char>('a', c, 'e'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('f' == c)
        return State(376);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_356(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_357(ScannerDriver::Char c) const
{
    if (between<Char>('a', c, 'l'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('n', c, 'z'))
        return State(24);
    if ('m' == c)
        return State(377);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_358(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(378);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_359(ScannerDriver::Char c) const
{
    if (between<Char>('m', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(379);
    return errorState();
}

ScannerDriver::State CppScanner::advance_360(ScannerDriver::Char c) const
{
    if (between<Char>('m', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'k'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('l' == c)
        return State(380);
    return errorState();
}

ScannerDriver::State CppScanner::advance_361(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(381);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_362(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_363(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(382);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_364(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(383);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_365(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_366(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(384);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_367(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(385);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_368(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_369(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('d', c, 'z'))
        return State(24);
    if ('c' == c)
        return State(386);
    if (between<Char>('a', c, 'b'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_370(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_371(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(387);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_372(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(388);
    return errorState();
}

ScannerDriver::State CppScanner::advance_373(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'o'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('q', c, 'z'))
        return State(24);
    if ('p' == c)
        return State(389);
    return errorState();
}

ScannerDriver::State CppScanner::advance_374(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('d', c, 'z'))
        return State(24);
    if ('c' == c)
        return State(390);
    if (between<Char>('a', c, 'b'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_375(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(391);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_376(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_377(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(392);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_378(ScannerDriver::Char c) const
{
    if ('d' == c)
        return State(393);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'c'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('e', c, 'z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_379(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_380(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(394);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_381(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_382(ScannerDriver::Char c) const
{
    if (between<Char>('t', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(395);
    if (between<Char>('a', c, 'r'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_383(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_384(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('d', c, 'z'))
        return State(24);
    if ('c' == c)
        return State(396);
    if (between<Char>('a', c, 'b'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_385(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_386(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(397);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_387(ScannerDriver::Char c) const
{
    if ('d' == c)
        return State(398);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'c'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('e', c, 'z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_388(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_389(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'q'))
        return State(24);
    if (between<Char>('s', c, 'z'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if ('r' == c)
        return State(399);
    return errorState();
}

ScannerDriver::State CppScanner::advance_390(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(400);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_391(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_392(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_393(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_394(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_395(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(401);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_396(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(402);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_397(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_398(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_399(ScannerDriver::Char c) const
{
    if ('e' == c)
        return State(403);
    if ('_' == c)
        return State(24);
    if (between<Char>('a', c, 'd'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('f', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_400(ScannerDriver::Char c) const
{
    if (between<Char>('t', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(404);
    if (between<Char>('a', c, 'r'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_401(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_402(ScannerDriver::Char c) const
{
    if (between<Char>('t', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(405);
    if (between<Char>('a', c, 'r'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_403(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(406);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_404(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(407);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_405(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(408);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_406(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(409);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_407(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_408(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_409(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('d', c, 'z'))
        return State(24);
    if ('c' == c)
        return State(410);
    if (between<Char>('a', c, 'b'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_410(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if ('a' == c)
        return State(411);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('b', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_411(ScannerDriver::Char c) const
{
    if (between<Char>('t', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if ('s' == c)
        return State(412);
    if (between<Char>('a', c, 'r'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_412(ScannerDriver::Char c) const
{
    if ('t' == c)
        return State(413);
    if (between<Char>('a', c, 's'))
        return State(24);
    if (between<Char>('u', c, 'z'))
        return State(24);
    if ('_' == c)
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::advance_413(ScannerDriver::Char c) const
{
    if ('_' == c)
        return State(24);
    if (between<Char>('0', c, '9'))
        return State(24);
    if (between<Char>('A', c, 'Z'))
        return State(24);
    if (between<Char>('a', c, 'z'))
        return State(24);
    return errorState();
}

ScannerDriver::State CppScanner::nextState(ScannerDriver::State state, ScannerDriver::Char c) const
{
    switch (state) {
        case 0: return advance_0(c);
        case 1: return advance_1(c);
        case 2: return advance_2(c);
        case 3: return advance_3(c);
        case 4: return advance_4(c);
        case 5: return advance_5(c);
        case 6: return advance_6(c);
        case 7: return advance_7(c);
        case 8: return advance_8(c);
        case 9: return advance_9(c);
        case 10: return advance_10(c);
        case 11: return advance_11(c);
        case 12: return advance_12(c);
        case 13: return advance_13(c);
        case 14: return advance_14(c);
        case 15: return advance_15(c);
        case 16: return advance_16(c);
        case 17: return advance_17(c);
        case 18: return advance_18(c);
        case 19: return advance_19(c);
        case 20: return advance_20(c);
        case 21: return advance_21(c);
        case 22: return advance_22(c);
        case 23: return advance_23(c);
        case 24: return advance_24(c);
        case 25: return advance_25(c);
        case 26: return advance_26(c);
        case 27: return advance_27(c);
        case 28: return advance_28(c);
        case 29: return advance_29(c);
        case 30: return advance_30(c);
        case 31: return advance_31(c);
        case 32: return advance_32(c);
        case 33: return advance_33(c);
        case 34: return advance_34(c);
        case 35: return advance_35(c);
        case 36: return advance_36(c);
        case 37: return advance_37(c);
        case 38: return advance_38(c);
        case 39: return advance_39(c);
        case 40: return advance_40(c);
        case 41: return advance_41(c);
        case 42: return advance_42(c);
        case 43: return advance_43(c);
        case 44: return advance_44(c);
        case 45: return advance_45(c);
        case 46: return advance_46(c);
        case 47: return advance_47(c);
        case 48: return advance_48(c);
        case 49: return advance_49(c);
        case 50: return advance_50(c);
        case 51: return advance_51(c);
        case 52: return advance_52(c);
        case 53: return advance_53(c);
        case 54: return advance_54(c);
        case 55: return advance_55(c);
        case 56: return advance_56(c);
        case 57: return advance_57(c);
        case 58: return advance_58(c);
        case 59: return advance_59(c);
        case 60: return advance_60(c);
        case 61: return advance_61(c);
        case 62: return advance_62(c);
        case 63: return advance_63(c);
        case 64: return advance_64(c);
        case 65: return advance_65(c);
        case 66: return advance_66(c);
        case 67: return advance_67(c);
        case 68: return advance_68(c);
        case 69: return advance_69(c);
        case 70: return advance_70(c);
        case 71: return advance_71(c);
        case 72: return advance_72(c);
        case 73: return advance_73(c);
        case 74: return advance_74(c);
        case 75: return advance_75(c);
        case 76: return advance_76(c);
        case 77: return advance_77(c);
        case 78: return advance_78(c);
        case 79: return advance_79(c);
        case 80: return advance_80(c);
        case 81: return advance_81(c);
        case 82: return advance_82(c);
        case 83: return advance_83(c);
        case 84: return advance_84(c);
        case 85: return advance_85(c);
        case 86: return advance_86(c);
        case 87: return advance_87(c);
        case 88: return advance_88(c);
        case 89: return advance_89(c);
        case 90: return advance_90(c);
        case 91: return advance_91(c);
        case 92: return advance_92(c);
        case 93: return advance_93(c);
        case 94: return advance_94(c);
        case 95: return advance_95(c);
        case 96: return advance_96(c);
        case 97: return advance_97(c);
        case 98: return advance_98(c);
        case 99: return advance_99(c);
        case 100: return advance_100(c);
        case 101: return advance_101(c);
        case 102: return advance_102(c);
        case 103: return advance_103(c);
        case 104: return advance_104(c);
        case 105: return advance_105(c);
        case 106: return advance_106(c);
        case 107: return advance_107(c);
        case 108: return advance_108(c);
        case 109: return advance_109(c);
        case 110: return advance_110(c);
        case 111: return advance_111(c);
        case 112: return advance_112(c);
        case 113: return advance_113(c);
        case 114: return advance_114(c);
        case 115: return advance_115(c);
        case 116: return advance_116(c);
        case 117: return advance_117(c);
        case 118: return advance_118(c);
        case 119: return advance_119(c);
        case 120: return advance_120(c);
        case 121: return advance_121(c);
        case 122: return advance_122(c);
        case 123: return advance_123(c);
        case 124: return advance_124(c);
        case 125: return advance_125(c);
        case 126: return advance_126(c);
        case 127: return advance_127(c);
        case 128: return advance_128(c);
        case 129: return advance_129(c);
        case 130: return advance_130(c);
        case 131: return advance_131(c);
        case 132: return advance_132(c);
        case 133: return advance_133(c);
        case 134: return advance_134(c);
        case 135: return advance_135(c);
        case 136: return advance_136(c);
        case 137: return advance_137(c);
        case 138: return advance_138(c);
        case 139: return advance_139(c);
        case 140: return advance_140(c);
        case 141: return advance_141(c);
        case 142: return advance_142(c);
        case 143: return advance_143(c);
        case 144: return advance_144(c);
        case 145: return advance_145(c);
        case 146: return advance_146(c);
        case 147: return advance_147(c);
        case 148: return advance_148(c);
        case 149: return advance_149(c);
        case 150: return advance_150(c);
        case 151: return advance_151(c);
        case 152: return advance_152(c);
        case 153: return advance_153(c);
        case 154: return advance_154(c);
        case 155: return advance_155(c);
        case 156: return advance_156(c);
        case 157: return advance_157(c);
        case 158: return advance_158(c);
        case 159: return advance_159(c);
        case 160: return advance_160(c);
        case 161: return advance_161(c);
        case 162: return advance_162(c);
        case 163: return advance_163(c);
        case 164: return advance_164(c);
        case 165: return advance_165(c);
        case 166: return advance_166(c);
        case 167: return advance_167(c);
        case 168: return advance_168(c);
        case 169: return advance_169(c);
        case 170: return advance_170(c);
        case 171: return advance_171(c);
        case 172: return advance_172(c);
        case 173: return advance_173(c);
        case 174: return advance_174(c);
        case 175: return advance_175(c);
        case 176: return advance_176(c);
        case 177: return advance_177(c);
        case 178: return advance_178(c);
        case 179: return advance_179(c);
        case 180: return advance_180(c);
        case 181: return advance_181(c);
        case 182: return advance_182(c);
        case 183: return advance_183(c);
        case 184: return advance_184(c);
        case 185: return advance_185(c);
        case 186: return advance_186(c);
        case 187: return advance_187(c);
        case 188: return advance_188(c);
        case 189: return advance_189(c);
        case 190: return advance_190(c);
        case 191: return advance_191(c);
        case 192: return advance_192(c);
        case 193: return advance_193(c);
        case 194: return advance_194(c);
        case 195: return advance_195(c);
        case 196: return advance_196(c);
        case 197: return advance_197(c);
        case 198: return advance_198(c);
        case 199: return advance_199(c);
        case 200: return advance_200(c);
        case 201: return advance_201(c);
        case 202: return advance_202(c);
        case 203: return advance_203(c);
        case 204: return advance_204(c);
        case 205: return advance_205(c);
        case 206: return advance_206(c);
        case 207: return advance_207(c);
        case 208: return advance_208(c);
        case 209: return advance_209(c);
        case 210: return advance_210(c);
        case 211: return advance_211(c);
        case 212: return advance_212(c);
        case 213: return advance_213(c);
        case 214: return advance_214(c);
        case 215: return advance_215(c);
        case 216: return advance_216(c);
        case 217: return advance_217(c);
        case 218: return advance_218(c);
        case 219: return advance_219(c);
        case 220: return advance_220(c);
        case 221: return advance_221(c);
        case 222: return advance_222(c);
        case 223: return advance_223(c);
        case 224: return advance_224(c);
        case 225: return advance_225(c);
        case 226: return advance_226(c);
        case 227: return advance_227(c);
        case 228: return advance_228(c);
        case 229: return advance_229(c);
        case 230: return advance_230(c);
        case 231: return advance_231(c);
        case 232: return advance_232(c);
        case 233: return advance_233(c);
        case 234: return advance_234(c);
        case 235: return advance_235(c);
        case 236: return advance_236(c);
        case 237: return advance_237(c);
        case 238: return advance_238(c);
        case 239: return advance_239(c);
        case 240: return advance_240(c);
        case 241: return advance_241(c);
        case 242: return advance_242(c);
        case 243: return advance_243(c);
        case 244: return advance_244(c);
        case 245: return advance_245(c);
        case 246: return advance_246(c);
        case 247: return advance_247(c);
        case 248: return advance_248(c);
        case 249: return advance_249(c);
        case 250: return advance_250(c);
        case 251: return advance_251(c);
        case 252: return advance_252(c);
        case 253: return advance_253(c);
        case 254: return advance_254(c);
        case 255: return advance_255(c);
        case 256: return advance_256(c);
        case 257: return advance_257(c);
        case 258: return advance_258(c);
        case 259: return advance_259(c);
        case 260: return advance_260(c);
        case 261: return advance_261(c);
        case 262: return advance_262(c);
        case 263: return advance_263(c);
        case 264: return advance_264(c);
        case 265: return advance_265(c);
        case 266: return advance_266(c);
        case 267: return advance_267(c);
        case 268: return advance_268(c);
        case 269: return advance_269(c);
        case 270: return advance_270(c);
        case 271: return advance_271(c);
        case 272: return advance_272(c);
        case 273: return advance_273(c);
        case 274: return advance_274(c);
        case 275: return advance_275(c);
        case 276: return advance_276(c);
        case 277: return advance_277(c);
        case 278: return advance_278(c);
        case 279: return advance_279(c);
        case 280: return advance_280(c);
        case 281: return advance_281(c);
        case 282: return advance_282(c);
        case 283: return advance_283(c);
        case 284: return advance_284(c);
        case 285: return advance_285(c);
        case 286: return advance_286(c);
        case 287: return advance_287(c);
        case 288: return advance_288(c);
        case 289: return advance_289(c);
        case 290: return advance_290(c);
        case 291: return advance_291(c);
        case 292: return advance_292(c);
        case 293: return advance_293(c);
        case 294: return advance_294(c);
        case 295: return advance_295(c);
        case 296: return advance_296(c);
        case 297: return advance_297(c);
        case 298: return advance_298(c);
        case 299: return advance_299(c);
        case 300: return advance_300(c);
        case 301: return advance_301(c);
        case 302: return advance_302(c);
        case 303: return advance_303(c);
        case 304: return advance_304(c);
        case 305: return advance_305(c);
        case 306: return advance_306(c);
        case 307: return advance_307(c);
        case 308: return advance_308(c);
        case 309: return advance_309(c);
        case 310: return advance_310(c);
        case 311: return advance_311(c);
        case 312: return advance_312(c);
        case 313: return advance_313(c);
        case 314: return advance_314(c);
        case 315: return advance_315(c);
        case 316: return advance_316(c);
        case 317: return advance_317(c);
        case 318: return advance_318(c);
        case 319: return advance_319(c);
        case 320: return advance_320(c);
        case 321: return advance_321(c);
        case 322: return advance_322(c);
        case 323: return advance_323(c);
        case 324: return advance_324(c);
        case 325: return advance_325(c);
        case 326: return advance_326(c);
        case 327: return advance_327(c);
        case 328: return advance_328(c);
        case 329: return advance_329(c);
        case 330: return advance_330(c);
        case 331: return advance_331(c);
        case 332: return advance_332(c);
        case 333: return advance_333(c);
        case 334: return advance_334(c);
        case 335: return advance_335(c);
        case 336: return advance_336(c);
        case 337: return advance_337(c);
        case 338: return advance_338(c);
        case 339: return advance_339(c);
        case 340: return advance_340(c);
        case 341: return advance_341(c);
        case 342: return advance_342(c);
        case 343: return advance_343(c);
        case 344: return advance_344(c);
        case 345: return advance_345(c);
        case 346: return advance_346(c);
        case 347: return advance_347(c);
        case 348: return advance_348(c);
        case 349: return advance_349(c);
        case 350: return advance_350(c);
        case 351: return advance_351(c);
        case 352: return advance_352(c);
        case 353: return advance_353(c);
        case 354: return advance_354(c);
        case 355: return advance_355(c);
        case 356: return advance_356(c);
        case 357: return advance_357(c);
        case 358: return advance_358(c);
        case 359: return advance_359(c);
        case 360: return advance_360(c);
        case 361: return advance_361(c);
        case 362: return advance_362(c);
        case 363: return advance_363(c);
        case 364: return advance_364(c);
        case 365: return advance_365(c);
        case 366: return advance_366(c);
        case 367: return advance_367(c);
        case 368: return advance_368(c);
        case 369: return advance_369(c);
        case 370: return advance_370(c);
        case 371: return advance_371(c);
        case 372: return advance_372(c);
        case 373: return advance_373(c);
        case 374: return advance_374(c);
        case 375: return advance_375(c);
        case 376: return advance_376(c);
        case 377: return advance_377(c);
        case 378: return advance_378(c);
        case 379: return advance_379(c);
        case 380: return advance_380(c);
        case 381: return advance_381(c);
        case 382: return advance_382(c);
        case 383: return advance_383(c);
        case 384: return advance_384(c);
        case 385: return advance_385(c);
        case 386: return advance_386(c);
        case 387: return advance_387(c);
        case 388: return advance_388(c);
        case 389: return advance_389(c);
        case 390: return advance_390(c);
        case 391: return advance_391(c);
        case 392: return advance_392(c);
        case 393: return advance_393(c);
        case 394: return advance_394(c);
        case 395: return advance_395(c);
        case 396: return advance_396(c);
        case 397: return advance_397(c);
        case 398: return advance_398(c);
        case 399: return advance_399(c);
        case 400: return advance_400(c);
        case 401: return advance_401(c);
        case 402: return advance_402(c);
        case 403: return advance_403(c);
        case 404: return advance_404(c);
        case 405: return advance_405(c);
        case 406: return advance_406(c);
        case 407: return advance_407(c);
        case 408: return advance_408(c);
        case 409: return advance_409(c);
        case 410: return advance_410(c);
        case 411: return advance_411(c);
        case 412: return advance_412(c);
        case 413: return advance_413(c);
        default: return advance_0(c);
    }
}
